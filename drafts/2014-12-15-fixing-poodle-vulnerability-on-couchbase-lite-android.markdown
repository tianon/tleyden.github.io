---
layout: post
title: "Fixing POODLE vulnerability on Couchbase Lite Android"
date: 2014-12-15 13:28
comments: true
categories: couchbase-lite POODLE
---

## Generate a self-signed SSL cert

```
$ openssl req -new -x509 -keyout server.pem -out server.pem -days 365 -nodes
```

It should prompt you with the following questions.  Here's what I used:

```
Country Name (2 letter code) [AU]:US
State or Province Name (full name) [Some-State]:California
Locality Name (eg, city) []:MV
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Couchbase, Inc.
Organizational Unit Name (eg, section) []:Mobile
Common Name (e.g. server FQDN or YOUR name) []:mobile.coubhase.com
Email Address []:test@mobile.couchbase.com
```

## Get an SSLv3 server up and running

### Install Python

I'm using [anaconda python](https://store.continuum.io/cshop/anaconda/) v 2.7.7 on OSX.  Running `python --version` yields `Python 2.7.7 :: Anaconda 2.0.1 (x86_64)`.

### Get dependencies

```
pip install pyopenssl
```

### Get the code

Save the contents of [this gist](https://gist.github.com/tleyden/d4f9600bf160870d5759) to a file called `SimpleSecureHTTPServer.py`.

## Start the server

```
$ sudo python SimpleSecureHTTPServer.py
```

## Verify SSLv3 server via curl

Try running this curl command:

```
$ curl -k -v https://localhost
```

You should see somewhere in the curl output that it is using SSLv3 - `* SSL 3.0 connection using TLS_RSA_WITH_AES_128_CBC_SHA`

On the server console, you should see:

```
127.0.0.1 - - [15/Dec/2014 15:19:58] "GET / HTTP/1.1" 200 -
```

Now, verify that the SSLv3 server is *only* using SSLv3 and cannot use TLS.

```
$ curl -k -v --tlsv1 https://localhost
```

You should see output:

```
curl: (35) Could not negotiate an SSL cipher suite with the server
```

## Send SSL request from Java code

The following code snippet will send a request over SSL to our test server:

```java
PersistentCookieStore cookieStore = database.getPersistentCookieStore();
CouchbaseLiteHttpClientFactory factory = new CouchbaseLiteHttpClientFactory(cookieStore);
factory.allowSelfSignedSSLCertificates();
HttpClient httpClient = factory.getHttpClient();

HttpGet request = new HttpGet("https://10.0.3.2");
HttpResponse response = httpClient.execute(request);
StatusLine status = response.getStatusLine();
Log.d(TAG, "response: %s status: %s", response, status);
```

This works, since at the time of writing, Couchbase Lite doesn't yet disable SSLv3 connections.  

## Disable SSLv3

Now it's time to disable SSLv3.

Unfortunately, I'm not seeing a clear way to do this.  I've posted a comment to [Android Issue 78431](https://code.google.com/p/android/issues/detail?id=78431#c7)


# References

* https://github.com/couchbase/couchbase-lite-java-core/issues/300
* http://code.activestate.com/recipes/442473-simple-http-server-supporting-ssl-secure-communica/
* http://msol.io/blog/tech/2014/09/30/create-a-self-signed-ssl-certificate-with-openssl/
* https://github.com/couchbase/couchbase-lite-android/issues/121
* http://stackoverflow.com/questions/2642777/trusting-all-certificates-using-httpclient-over-https
* https://code.google.com/p/android/issues/detail?id=78431